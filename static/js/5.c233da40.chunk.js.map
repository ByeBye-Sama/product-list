{"version":3,"sources":["views/home/components/header/index.js","views/home/components/product-card/index.js","views/home/components/product-form/index.js","views/home/services/index.js","views/home/index.js","components/button/index.js","components/delete-modal/index.js","components/upsert-modal/content.js","components/upsert-modal/index.js"],"names":["useStyles","makeStyles","theme","root","alignItems","background","palette","gradient","display","height","spacing","justifyContent","padding","position","top","width","title","color","Header","props","onCreate","classes","history","useRouter","onLogout","a","sessionManager","logout","push","routesPath","LOGIN","Box","boxShadow","className","Typography","variant","IconButton","onClick","fontSize","edge","flexDirection","minWidth","media","category","fontWeight","ProductCard","product","onDelete","onEdit","name","description","price","Card","CardMedia","image","CardContent","gutterBottom","align","Number","parseFloat","toFixed","Divider","upperCase","component","CardActions","Button","startIcon","flexGrow","numberField","ProductForm","TextField","label","type","InputProps","inputProps","maxLength","multiline","rows","autoComplete","startAdornment","InputAdornment","baseUrl","process","token","auth","Authorization","getProducts","axios","url","method","headers","response","console","error","createProduct","values","data","deleteProduct","id","updateProduct","marginTop","loader","HomeScreen","useState","isLoading","setIsLoading","isDeleting","setIsDeleting","reloadData","setReloadData","selectedProduct","setSelectedProduct","isDeleteModalOpen","showDeleteModal","isEditModalOpen","showEditModal","isCreateModalOpen","showCreateModal","products","setProducts","formValidator","getValidator","pick","formConstraints","useEffect","get","loadProducts","onDeleteProduct","onEditProduct","onCreateProduct","renderProducts","Grid","item","xs","key","CircularProgress","size","container","map","isOpen","loading","onClose","onConfirm","initialValues","onSubmit","validate","actionButtonLabel","wrapper","disabled","children","loaderColor","rest","style","visibility","actions","light","DeleteModal","Dialog","fullWidth","maxWidth","open","DialogTitle","DialogContent","DialogContentText","DialogActions","content","marginBottom","Content","UpsertModal","formProps","handleSubmit","pristine","submitting","event"],"mappings":"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","file":"static/js/5.c233da40.chunk.js","sourcesContent":["import React from 'react'\nimport AddBoxIcon from '@material-ui/icons/AddBox'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport { Box, makeStyles, Typography, IconButton } from '@material-ui/core'\nimport { useRouter } from 'hooks'\nimport { sessionManager } from 'utils'\nimport { palette, routesPath } from 'constants.js'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    alignItems: 'center',\n    background: palette.gradient,\n    display: 'flex',\n    height: theme.spacing(8),\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 3),\n    position: 'fixed',\n    top: 0,\n    width: '100%'\n  },\n  title: {\n    color: 'white'\n  }\n}))\n\nconst Header = props => {\n  const { onCreate } = props\n\n  const classes = useStyles()\n\n  const { history } = useRouter()\n\n  const onLogout = async () => {\n    sessionManager.logout()\n\n    await history.push(routesPath.LOGIN)\n  }\n\n  return (\n    <Box boxShadow={6} className={classes.root}>\n      <Typography variant=\"h5\" className={classes.title}>\n        Product CRUD\n      </Typography>\n      <IconButton onClick={onCreate}>\n        <AddBoxIcon fontSize=\"large\" className={classes.title} />\n      </IconButton>\n      <IconButton onClick={onLogout} edge=\"end\">\n        <ExitToAppIcon fontSize=\"large\" className={classes.title} />\n      </IconButton>\n    </Box>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { upperCase } from 'lodash'\nimport {\n  makeStyles,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  Box,\n  Divider\n} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    justifyContent: 'space-between',\n    minWidth: theme.spacing(35)\n  },\n  media: {\n    height: theme.spacing(18)\n  },\n  category: {\n    color: '#909090',\n    fontWeight: 'bold'\n  }\n}))\n\nconst ProductCard = props => {\n  const { product, onDelete, onEdit } = props\n\n  const { name, description, category, price } = product\n\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.root}>\n      <Box>\n        <CardMedia\n          className={classes.media}\n          image=\"https://images.photowall.com/products/59504/mountain-view-1.jpg?h=699&q=85\"\n          title=\"Product\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" align=\"right\">\n            {Number.parseFloat(price).toFixed(2)}\n          </Typography>\n          <Divider />\n          <Typography variant=\"caption\" className={classes.category}>\n            {upperCase(category)}\n          </Typography>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {description}\n          </Typography>\n        </CardContent>\n      </Box>\n      <CardActions>\n        <Button color=\"primary\" startIcon={<EditIcon />} onClick={onEdit}>\n          Edit\n        </Button>\n        <Button color=\"secondary\" startIcon={<DeleteIcon />} onClick={onDelete}>\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default ProductCard\n","import React from 'react'\nimport { InputAdornment, makeStyles } from '@material-ui/core'\nimport { Field } from 'react-final-form'\nimport { TextField } from 'final-form-material-ui'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100%',\n    padding: theme.spacing(3)\n  },\n  numberField: `\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n  `\n}))\n\nconst ProductForm = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <Field\n        component={TextField}\n        name=\"name\"\n        label=\"Name\"\n        variant=\"outlined\"\n        type=\"text\"\n        InputProps={{\n          inputProps: { maxLength: 255 }\n        }}\n      />\n      <Field\n        component={TextField}\n        name=\"description\"\n        multiline\n        rows={3}\n        label=\"Description\"\n        variant=\"outlined\"\n        type=\"text\"\n        InputProps={{\n          inputProps: { maxLength: 255 }\n        }}\n      />\n      <Field\n        component={TextField}\n        name=\"category\"\n        label=\"Category\"\n        variant=\"outlined\"\n        type=\"text\"\n        InputProps={{\n          inputProps: { maxLength: 255 }\n        }}\n      />\n      <Field\n        autoComplete=\"off\"\n        className={classes.numberField}\n        component={TextField}\n        name=\"price\"\n        label=\"Price\"\n        variant=\"outlined\"\n        type=\"number\"\n        InputProps={{\n          inputProps: { maxLength: 18 },\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\n        }}\n      />\n    </>\n  )\n}\n\nexport default ProductForm\n","import axios from 'axios'\nimport { sessionManager } from 'utils'\n\nconst baseUrl = process.env.REACT_APP_API_BASE_URL\n\nconst { token } = sessionManager\n\nconst auth = {\n  Authorization: `Bearer ${token}`\n}\n\nexport const getProducts = async () => {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/products`,\n      method: 'GET',\n      headers: auth\n    })\n\n    return response\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nexport const createProduct = async values => {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/products`,\n      data: values,\n      method: 'POST',\n      headers: auth\n    })\n\n    return response\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nexport const deleteProduct = async id => {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/products/${id}`,\n      method: 'DELETE',\n      headers: auth\n    })\n\n    return response\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nexport const updateProduct = async (id, values) => {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/products/${id}`,\n      data: values,\n      method: 'PUT',\n      headers: auth\n    })\n\n    return response\n  } catch (e) {\n    console.error(e)\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { map, get, pick } from 'lodash'\nimport { Box, Grid, CircularProgress, makeStyles } from '@material-ui/core'\nimport { DeleteModal, UpsertModal } from 'components'\nimport { getValidator, formConstraints } from 'utils'\nimport { ProductCard, ProductForm, Header } from './components'\nimport {\n  getProducts,\n  deleteProduct,\n  updateProduct,\n  createProduct\n} from './services'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100%',\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(3)\n  },\n  loader: {\n    alignItems: 'center',\n    display: 'flex',\n    height: `100vh`\n  }\n}))\n\nconst HomeScreen = () => {\n  const classes = useStyles()\n\n  const [isLoading, setIsLoading] = useState(true)\n\n  const [isDeleting, setIsDeleting] = useState(false)\n\n  const [reloadData, setReloadData] = useState(!false)\n\n  const [selectedProduct, setSelectedProduct] = useState()\n\n  const [isDeleteModalOpen, showDeleteModal] = useState(false)\n\n  const [isEditModalOpen, showEditModal] = useState(false)\n\n  const [isCreateModalOpen, showCreateModal] = useState(false)\n\n  const [products, setProducts] = useState([])\n\n  const fieldNames = ['name', 'description', 'category', 'price']\n\n  const formValidator = getValidator(pick(formConstraints, fieldNames))\n\n  useEffect(() => {\n    const loadProducts = async () => {\n      const response = await getProducts()\n\n      if (get(response, 'status') === 200) {\n        setProducts(response.data.products)\n\n        setIsLoading(false)\n      }\n    }\n\n    loadProducts()\n  }, [reloadData])\n\n  const onDeleteProduct = async () => {\n    setIsDeleting(true)\n\n    const response = await deleteProduct(selectedProduct.id)\n\n    if (get(response, 'status') === 200) {\n      setReloadData(!reloadData)\n\n      setIsDeleting(false)\n    }\n  }\n\n  const onEditProduct = async values => {\n    const response = await updateProduct(selectedProduct.id, values)\n\n    if (get(response, 'status') === 200) {\n      setReloadData(!reloadData)\n\n      showEditModal(false)\n    }\n  }\n\n  const onCreateProduct = async values => {\n    const response = await createProduct(values)\n\n    if (get(response, 'status') === 201) {\n      setReloadData(!reloadData)\n\n      showCreateModal(false)\n    }\n  }\n\n  const renderProducts = product => {\n    return (\n      <Grid item xs key={product.id}>\n        <ProductCard\n          product={product}\n          onEdit={() => {\n            setSelectedProduct(product)\n\n            showEditModal(true)\n          }}\n          onDelete={() => {\n            setSelectedProduct(product)\n\n            showDeleteModal(true)\n          }}\n        />\n      </Grid>\n    )\n  }\n\n  const renderContent = () => {\n    if (isLoading) {\n      return (\n        <Box className={classes.loader}>\n          <CircularProgress size={60} />\n        </Box>\n      )\n    }\n\n    return (\n      <>\n        <Box className={classes.root}>\n          <Grid container spacing={3}>\n            {map(products, renderProducts)}\n          </Grid>\n        </Box>\n        {isDeleteModalOpen && (\n          <DeleteModal\n            isOpen={isDeleteModalOpen}\n            loading={isDeleting}\n            onClose={() => showDeleteModal(false)}\n            onConfirm={() => onDeleteProduct()}\n            title=\"product\"\n            type={selectedProduct.name}\n          />\n        )}\n        {isEditModalOpen && (\n          <UpsertModal\n            initialValues={selectedProduct}\n            isOpen={isEditModalOpen}\n            onClose={() => showEditModal(false)}\n            onSubmit={onEditProduct}\n            title={`Update ${get(selectedProduct, 'name')}`}\n            validate={formValidator}\n          >\n            <ProductForm />\n          </UpsertModal>\n        )}\n        {isCreateModalOpen && (\n          <UpsertModal\n            isOpen={isCreateModalOpen}\n            onClose={() => showCreateModal(false)}\n            onSubmit={onCreateProduct}\n            title=\"Create product\"\n            validate={formValidator}\n            actionButtonLabel=\"create\"\n          >\n            <ProductForm />\n          </UpsertModal>\n        )}\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Header onCreate={() => showCreateModal(true)} />\n      {renderContent()}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React from 'react'\nimport {\n  Box,\n  Button as MaterialButton,\n  CircularProgress,\n  makeStyles\n} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    position: 'relative'\n  },\n  loader: {\n    color: 'black',\n    position: 'absolute'\n  }\n}))\n\nconst Button = props => {\n  const { loading, disabled, children, loaderColor, ...rest } = props\n\n  const classes = useStyles(props)\n\n  return (\n    <MaterialButton\n      className={classes.wrapper}\n      disabled={disabled || loading}\n      {...rest}\n    >\n      {!loading && children}\n      {loading && (\n        <>\n          <Box style={{ visibility: 'hidden' }}>{children}</Box>\n          <CircularProgress\n            className={classes.loader}\n            color={loaderColor}\n            size={24}\n          />\n        </>\n      )}\n    </MaterialButton>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles\n} from '@material-ui/core'\nimport { Button } from 'components'\nimport { palette } from 'constants.js'\n\nconst useStyles = makeStyles(theme => ({\n  actions: {\n    background: palette.light,\n    padding: theme.spacing(2)\n  }\n}))\n\nconst DeleteModal = props => {\n  const { isOpen, onClose, onConfirm, loading, type, title } = props\n\n  const classes = useStyles()\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" onClose={onClose} open={isOpen}>\n      <DialogTitle>{`Delete ${title}`}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {`¿Do you want to remove ${type}?`}\n          <br />\n          The data cannot be recovered\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button onClick={onClose} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button\n          color=\"secondary\"\n          loading={loading}\n          onClick={async () => {\n            await onConfirm()\n\n            onClose()\n          }}\n          variant=\"contained\"\n        >\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default DeleteModal\n","import React from 'react'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles\n} from '@material-ui/core'\nimport { Button } from 'components'\nimport { palette } from 'constants.js'\n\nconst useStyles = makeStyles(theme => ({\n  actions: {\n    background: palette.light,\n    padding: theme.spacing(2)\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    '& >*': {\n      marginBottom: theme.spacing(2.5)\n    }\n  }\n}))\n\nconst Content = props => {\n  const {\n    onSubmit,\n    loading,\n    disabled,\n    isOpen,\n    title,\n    children,\n    onClose,\n    actionButtonLabel\n  } = props\n\n  const classes = useStyles(props)\n\n  return (\n    <Dialog onClose={onClose} open={isOpen} fullWidth maxWidth=\"xs\">\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent className={classes.content}>{children}</DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button onClick={onClose} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={loading}\n          disabled={disabled}\n          onClick={onSubmit}\n        >\n          {actionButtonLabel}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default Content\n","import React from 'react'\nimport { Form } from 'react-final-form'\nimport Content from './content'\n\nconst UpsertModal = props => {\n  const {\n    children,\n    initialValues,\n    isOpen,\n    onClose,\n    onSubmit,\n    actionButtonLabel,\n    title,\n    validate\n  } = props\n\n  return (\n    <Form initialValues={initialValues} onSubmit={onSubmit} validate={validate}>\n      {formProps => {\n        const { handleSubmit, pristine, submitting } = formProps\n\n        return (\n          <Content\n            loading={submitting}\n            disabled={pristine}\n            onSubmit={event => handleSubmit(event)}\n            isOpen={isOpen}\n            title={title}\n            onClose={onClose}\n            actionButtonLabel={actionButtonLabel || 'Guardar'}\n          >\n            {children}\n          </Content>\n        )\n      }}\n    </Form>\n  )\n}\n\nexport default UpsertModal\n"],"sourceRoot":""}
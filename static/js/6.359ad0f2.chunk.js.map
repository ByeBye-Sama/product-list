{"version":3,"sources":["views/login/services/index.js","views/login/components/login-form/index.js","views/login/components/register-form/index.js","views/login/index.js","components/button/index.js","components/delete-modal/index.js","components/upsert-modal/content.js","components/upsert-modal/index.js"],"names":["baseUrl","process","signIn","values","a","axios","url","data","method","response","console","error","signUp","useStyles","makeStyles","theme","root","display","flexDirection","marginBottom","spacing","marginTop","LoginForm","classes","history","useRouter","formValidator","getValidator","pick","formConstraints","onSubmit","get","sessionManager","login","push","routesPath","HOME","window","location","reload","validate","formProps","handleSubmit","submitting","pristine","className","component","TextField","fullWidth","label","name","type","variant","color","disabled","loading","size","RegisterForm","backdropFilter","background","borderRadius","justifyContent","margin","padding","title","LoginScreen","useState","hasAccount","setHasAccount","content","buttonLabel","getContent","Box","Typography","Button","onClick","wrapper","position","loader","props","children","loaderColor","rest","style","visibility","CircularProgress","actions","palette","light","DeleteModal","isOpen","onClose","onConfirm","Dialog","maxWidth","open","DialogTitle","DialogContent","DialogContentText","DialogActions","Content","actionButtonLabel","UpsertModal","initialValues","event"],"mappings":"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","file":"static/js/6.359ad0f2.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = process.env.REACT_APP_API_BASE_URL\n\nexport const signIn = async values => {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/login`,\n      data: values,\n      method: 'POST'\n    })\n\n    return response\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nexport const signUp = async values => {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/register`,\n      data: values,\n      method: 'POST'\n    })\n\n    return response\n  } catch (e) {\n    console.error(e)\n  }\n}\n","import React from 'react'\nimport { get, pick } from 'lodash'\nimport { makeStyles } from '@material-ui/core'\nimport { Form, Field } from 'react-final-form'\nimport { TextField } from 'final-form-material-ui'\nimport { useRouter } from 'hooks'\nimport { Button } from 'components'\nimport { sessionManager, getValidator, formConstraints } from 'utils'\nimport { routesPath } from 'constants.js'\nimport { signIn } from '../../services'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    '& >:not(:last-child)': {\n      marginBottom: theme.spacing(3)\n    },\n\n    '& >:last-child': {\n      marginTop: theme.spacing(3)\n    }\n  }\n}))\n\nconst LoginForm = () => {\n  const classes = useStyles()\n\n  const { history } = useRouter()\n\n  const fieldNames = ['email', 'password']\n\n  const formValidator = getValidator(pick(formConstraints, fieldNames))\n\n  const onSubmit = async values => {\n    const response = await signIn(values)\n\n    if (get(response, 'status') === 200) {\n      sessionManager.login(response.data.data)\n\n      await history.push(routesPath.HOME)\n\n      window.location.reload()\n    }\n  }\n\n  return (\n    <>\n      <Form onSubmit={onSubmit} validate={formValidator}>\n        {formProps => {\n          const { handleSubmit, submitting, pristine } = formProps\n\n          return (\n            <form className={classes.root} onSubmit={handleSubmit}>\n              <Field\n                component={TextField}\n                fullWidth\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                variant=\"outlined\"\n              />\n              <Field\n                component={TextField}\n                fullWidth\n                label=\"Password\"\n                name=\"password\"\n                type=\"password\"\n                variant=\"outlined\"\n              />\n              <Button\n                color=\"primary\"\n                fullWidth\n                disabled={pristine || submitting}\n                loading={submitting}\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Sign in\n              </Button>\n            </form>\n          )\n        }}\n      </Form>\n    </>\n  )\n}\n\nexport default LoginForm\n","import React from 'react'\nimport { get, pick } from 'lodash'\nimport { makeStyles } from '@material-ui/core'\nimport { Form, Field } from 'react-final-form'\nimport { TextField } from 'final-form-material-ui'\nimport { useRouter } from 'hooks'\nimport { Button } from 'components'\nimport { sessionManager, getValidator, formConstraints } from 'utils'\nimport { routesPath } from 'constants.js'\nimport { signUp } from '../../services'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    '& >:not(:last-child)': {\n      marginBottom: theme.spacing(3)\n    },\n\n    '& >:last-child': {\n      marginTop: theme.spacing(3)\n    }\n  }\n}))\n\nconst RegisterForm = () => {\n  const classes = useStyles()\n\n  const { history } = useRouter()\n\n  const fieldNames = ['name', 'email', 'password', 'c_password']\n\n  const formValidator = getValidator(pick(formConstraints, fieldNames))\n\n  const onSubmit = async values => {\n    const response = await signUp(values)\n\n    if (get(response, 'status') === 200) {\n      sessionManager.login(response.data.data)\n\n      await history.push(routesPath.HOME)\n\n      window.location.reload()\n    }\n  }\n\n  return (\n    <>\n      <Form onSubmit={onSubmit} validate={formValidator}>\n        {formProps => {\n          const { handleSubmit, submitting, pristine } = formProps\n\n          return (\n            <form className={classes.root} onSubmit={handleSubmit}>\n              <Field\n                component={TextField}\n                fullWidth\n                label=\"Fullname\"\n                name=\"name\"\n                type=\"text\"\n                variant=\"outlined\"\n              />\n              <Field\n                component={TextField}\n                fullWidth\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                variant=\"outlined\"\n              />\n              <Field\n                component={TextField}\n                fullWidth\n                label=\"Password\"\n                name=\"password\"\n                type=\"password\"\n                variant=\"outlined\"\n              />\n              <Field\n                component={TextField}\n                fullWidth\n                label=\"Confirm Password\"\n                name=\"c_password\"\n                type=\"password\"\n                variant=\"outlined\"\n              />\n              <Button\n                color=\"primary\"\n                fullWidth\n                disabled={pristine || submitting}\n                loading={submitting}\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Sign up\n              </Button>\n            </form>\n          )\n        }}\n      </Form>\n    </>\n  )\n}\n\nexport default RegisterForm\n","import React, { useState } from 'react'\nimport { Box, makeStyles, Typography, Button } from '@material-ui/core'\nimport { LoginForm, RegisterForm } from './components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backdropFilter: 'blur(10px)',\n    background: 'rgba(255,255,255, 0.3)',\n    borderRadius: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    margin: theme.spacing(3),\n    padding: theme.spacing(5, 3, 3)\n  },\n  title: {\n    marginBottom: theme.spacing(1)\n  },\n  label: {\n    marginBottom: theme.spacing(5)\n  }\n}))\n\nconst getContent = hasAccount => {\n  if (!hasAccount) {\n    return {\n      label: 'Do you already have an account?',\n      buttonLabel: 'Sign in',\n      component: <RegisterForm />\n    }\n  }\n\n  return {\n    label: `You don't have an account yet?`,\n    buttonLabel: 'Sign up',\n    component: <LoginForm />\n  }\n}\n\nconst LoginScreen = () => {\n  const classes = useStyles()\n\n  const [hasAccount, setHasAccount] = useState(true)\n\n  const content = getContent(hasAccount)\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h5\" color=\"primary\" className={classes.title}>\n        Welcome, to continue login or register.\n      </Typography>\n      <Typography variant=\"h6\" className={classes.label}>\n        {content.label}\n        <Button\n          color=\"secondary\"\n          size=\"large\"\n          onClick={() => setHasAccount(!hasAccount)}\n        >\n          {content.buttonLabel}\n        </Button>\n      </Typography>\n      {content.component}\n    </Box>\n  )\n}\n\nexport default LoginScreen\n","import React from 'react'\nimport {\n  Box,\n  Button as MaterialButton,\n  CircularProgress,\n  makeStyles\n} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    position: 'relative'\n  },\n  loader: {\n    color: 'black',\n    position: 'absolute'\n  }\n}))\n\nconst Button = props => {\n  const { loading, disabled, children, loaderColor, ...rest } = props\n\n  const classes = useStyles(props)\n\n  return (\n    <MaterialButton\n      className={classes.wrapper}\n      disabled={disabled || loading}\n      {...rest}\n    >\n      {!loading && children}\n      {loading && (\n        <>\n          <Box style={{ visibility: 'hidden' }}>{children}</Box>\n          <CircularProgress\n            className={classes.loader}\n            color={loaderColor}\n            size={24}\n          />\n        </>\n      )}\n    </MaterialButton>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles\n} from '@material-ui/core'\nimport { Button } from 'components'\nimport { palette } from 'constants.js'\n\nconst useStyles = makeStyles(theme => ({\n  actions: {\n    background: palette.light,\n    padding: theme.spacing(2)\n  }\n}))\n\nconst DeleteModal = props => {\n  const { isOpen, onClose, onConfirm, loading, type, title } = props\n\n  const classes = useStyles()\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" onClose={onClose} open={isOpen}>\n      <DialogTitle>{`Delete ${title}`}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {`¿Do you want to remove ${type}?`}\n          <br />\n          The data cannot be recovered\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button onClick={onClose} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button\n          color=\"secondary\"\n          loading={loading}\n          onClick={async () => {\n            await onConfirm()\n\n            onClose()\n          }}\n          variant=\"contained\"\n        >\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default DeleteModal\n","import React from 'react'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles\n} from '@material-ui/core'\nimport { Button } from 'components'\nimport { palette } from 'constants.js'\n\nconst useStyles = makeStyles(theme => ({\n  actions: {\n    background: palette.light,\n    padding: theme.spacing(2)\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n\n    '& >*': {\n      marginBottom: theme.spacing(2.5)\n    }\n  }\n}))\n\nconst Content = props => {\n  const {\n    onSubmit,\n    loading,\n    disabled,\n    isOpen,\n    title,\n    children,\n    onClose,\n    actionButtonLabel\n  } = props\n\n  const classes = useStyles(props)\n\n  return (\n    <Dialog onClose={onClose} open={isOpen} fullWidth maxWidth=\"xs\">\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent className={classes.content}>{children}</DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button onClick={onClose} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={loading}\n          disabled={disabled}\n          onClick={onSubmit}\n        >\n          {actionButtonLabel}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default Content\n","import React from 'react'\nimport { Form } from 'react-final-form'\nimport Content from './content'\n\nconst UpsertModal = props => {\n  const {\n    children,\n    initialValues,\n    isOpen,\n    onClose,\n    onSubmit,\n    actionButtonLabel,\n    title,\n    validate\n  } = props\n\n  return (\n    <Form initialValues={initialValues} onSubmit={onSubmit} validate={validate}>\n      {formProps => {\n        const { handleSubmit, pristine, submitting } = formProps\n\n        return (\n          <Content\n            loading={submitting}\n            disabled={pristine}\n            onSubmit={event => handleSubmit(event)}\n            isOpen={isOpen}\n            title={title}\n            onClose={onClose}\n            actionButtonLabel={actionButtonLabel || 'Guardar'}\n          >\n            {children}\n          </Content>\n        )\n      }}\n    </Form>\n  )\n}\n\nexport default UpsertModal\n"],"sourceRoot":""}